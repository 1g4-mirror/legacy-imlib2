#include <gtest/gtest.h>

#include "config.h"
#define IMLIB2_DEPRECATED       // Suppress deprecation warnings
#include <Imlib2.h>

#include <fcntl.h>
#ifdef BUILD_HEIF_LOADER
#include <libheif/heif.h>
#endif
#ifdef BUILD_JXL_LOADER
#include <jxl/version.h>
#endif

#include "test.h"

#define EXPECT_OK(x)  EXPECT_FALSE(x)
#define EXPECT_ERR(x) EXPECT_TRUE(x)

typedef struct {
    const char     *name;
    unsigned int    crc;
} tii_t;

static tii_t    tii[] = {
/**INDENT-OFF**/
   { "image-noalp-64.argb",             1636116234 },
   { "image-noalp-64.bmp",              1636116234 },
   { "image-noalp-64.ff",               1636116234 },
   { "image-alpha-64.ff",                169859126 },
#ifdef BUILD_BZ2_LOADER
   { "image-noalp-64.ff.bz2",           1636116234 },
#endif
#ifdef BUILD_ZLIB_LOADER
   { "image-noalp-64.ff.gz",            1636116234 },
#endif
#ifdef BUILD_LZMA_LOADER
   { "image-noalp-64.ff.xz",            1636116234 },
#endif
#ifdef BUILD_GIF_LOADER
   { "image-noalp-64.gif",               424929245 },
#endif
#ifdef BUILD_HEIF_LOADER
#if LIBHEIF_HAVE_VERSION(1, 19, 0)
   { "image-noalp-64.heif",             2791706719 },
   { "image-alpha-64.heif",             2131715016 },
#else
   { "image-noalp-64.heif",             2910467726 },
   { "image-alpha-64.heif",              722818128 },
#endif
#endif
   { "image-noalp-64.ico",              1636116234 },
   { "image-noalp-64.ilbm",             1636116234 },
#ifdef BUILD_JPEG_LOADER
   { "image-noalp-64.jpg",              3363041416 },
#endif
#ifdef BUILD_ID3_LOADER
#ifdef BUILD_PNG_LOADER
   { "image-noalp-64.png.mp3",          1636116234 },
#endif
#endif
#ifdef BUILD_J2K_LOADER
   { "image-noalp-64.jp2",              1636116234 },
   { "image-noalp-64.j2k",              1636116234 },
   { "image-alpha-64.jp2",               169859126 },
   { "image-alpha-64.j2k",               169859126 },
   { "image-noalp-64-gray.jp2",          479878920 },
   { "image-noalp-64-gray.j2k",          479878920 },
   { "image-alpha-64-gray.jp2",         1639956975 },
   { "image-alpha-64-gray.j2k",         1639956975 },
#endif
#ifdef BUILD_JXL_LOADER
#if JPEGXL_NUMERIC_VERSION >= JPEGXL_COMPUTE_NUMERIC_VERSION(0, 10, 0)
#ifdef __i386__
   { "image-noalp-64.jxl",              2550658206 },
#else
   { "image-noalp-64.jxl",              3151654577 },
#endif
#else
   { "image-noalp-64.jxl",              2534597492 },
#endif
#endif
#ifdef BUILD_PNG_LOADER
   { "image-noalp-64.png",              1636116234 },
   { "image-alpha-64.png",               169859126 },
   { "image-alpha-64-gray.png",         1639956975 },
#endif
   { "image-noalp-64.ppm",              1636116234 },
   { "image-noalp-64.pgm",               479878920 },
   { "image-noalp-64.pbm",              1318187821 },
   { "image-noalp-64-P3.ppm",           1636116234 },
   { "image-noalp-64-P2.pgm",            479878920 },
   { "image-noalp-64-P1.pbm",           1318187821 },
   { "image-noalp-64-P7_332.ppm",       1359309240 },
   { "image-alpha-64-P8.ppm",            169859126 },
   { "image-noalp-64.pam",              1636116234 },
   { "image-noalp-64-gray.pam",          479878920 },
   { "image-noalp-64-mono.pam",         1880264618 },
   { "image-alpha-64.pam",               169859126 },
   { "image-alpha-64-gray.pam",         1639956975 },
   { "image-alpha-64-mono.pam",         3339433956 },
   { "image-noalp-64.qoi",              1636116234 },
   { "image-noalp-64.tga",              1636116234 },
#ifdef BUILD_SVG_LOADER
   { "image-noalp-64.svg",              1636116234 },
   { "image-alpha-64.svg",               169859126 },
#endif
#ifdef BUILD_TIFF_LOADER
   { "image-noalp-64.tiff",             1636116234 },
#endif
#ifdef BUILD_WEBP_LOADER
   { "image-noalp-64.webp",             3702954496 },
#endif
   { "image-noalp-64.xbm",              1318187821 },
   { "image-noalp-64.xpm",               424929245 },
#ifdef BUILD_Y4M_LOADER
   { "image-noalp-64-yuv444p.y4m",      1981141086 },
   { "image-noalp-64-yuv422p.y4m",      4153669830 },
   { "image-noalp-64-yuv420p.y4m",      2788407927 },
   // Old ones, not sure which are useful
   // If useful it would be nice to have them generated by the image Makefile
   { "icon-64.yuv420p.y4m",             3810593176 },
   { "icon-64.yuv422p.y4m",             2809447983 },
   { "icon-64.yuv444p.y4m",             2400380696 },
   { "icon-64.yuv420jpeg.y4m",          3810593176 },
   { "icon-64.yuv420mpeg2.y4m",         3810593176 },
   { "icon-64.yuv420paldv.y4m",         3810593176 },
   { "icon-64.aspect_unsupported.y4m",  2400380696 },
   { "icon-64.framerate_1_1.y4m",       2400380696 },
   { "img-17x14.full_range.y4m",            839224907 },
   { "img-17x14.yuv420p10.full_range.y4m",  839224907 },
   { "img-8x8.full_range.y4m",             1737487406 },
   { "img-8x8.yuv420p10.full_range.y4m",   1737487406 },
   { "img-8x8.yuv420p10.full_range.framerate_no.y4m",   1737487406 },
#endif

   { "icon-128.ico",                     218415319 },
   { "icon-128-d1.ico",                 3776822558 },
   { "icon-128-d4.ico",                 1822311162 },
   { "icon-128-d8.ico",                 2584400446 },
/**INDENT-ON**/
};
#define NT3_IMGS (sizeof(tii) / sizeof(tii_t))

TEST(LOAD2, load_1)
{
    unsigned int    i, crc;
    const char     *fn;
    char            buf[256];
    Imlib_Image     im;

    for (i = 0; i < NT3_IMGS; i++)
    {
        fn = tii[i].name;

        if (file_skip(fn))
            continue;

        if (*fn != '/')
        {
            snprintf(buf, sizeof(buf), "%s/%s", IMG_SRC, fn);
            fn = buf;
        }
        pr_info("Load '%s'", fn);

        im = imlib_load_image(fn);
        ASSERT_TRUE(im) << "cannot load file: " << fn;

        crc = image_get_crc32(im);
        EXPECT_EQ(crc, tii[i].crc) << "wrong crc file: " << fn
            << " expected: " << tii[i].crc << " actual: " << crc;
        imlib_context_set_image(im);
        imlib_free_image_and_decache();

        im = imlib_load_image_frame(fn, 0);
        ASSERT_TRUE(im) << "cannot load file: " << fn;
        crc = image_get_crc32(im);
        EXPECT_EQ(crc, tii[i].crc) << "wrong crc file: " << fn
            << " expected: " << tii[i].crc << " actual: " << crc;

        imlib_context_set_image(im);
        imlib_free_image_and_decache();

        im = imlib_load_image_frame(fn, 1);
        ASSERT_TRUE(im) << "cannot load file: " << fn;
        crc = image_get_crc32(im);
        EXPECT_EQ(crc, tii[i].crc) << "wrong crc file: " << fn
            << " expected: " << tii[i].crc << " actual: " << crc;

        imlib_context_set_image(im);
        imlib_free_image_and_decache();
    }
}
